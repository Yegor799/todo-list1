{"version":3,"sources":["components/todos/DoneList/DoneList.module.css","components/Container/Container.module.css","components/todos/ToDoList/ToDoList.module.css","components/Container/Container.jsx","redux/todos/todos-actions.js","components/todos/ToDoList/ToDoList.jsx","components/todos/InProgressList/InProgressList.jsx","components/todos/DoneList/DoneList.jsx","App.jsx","redux/todos/todos-reducer.js","redux/store.js","index.js","components/todos/InProgressList/InProgressList.module.css"],"names":["module","exports","Container","children","className","s","container","addTodo","createAction","text","payload","id","shortid","generate","deleteTodo","moveInprogress","moveDone","connect","state","todo","todos","dispatch","todosActions","useState","setText","isVisibleInput","setIsVisibleInput","onSubmit","e","preventDefault","main","type","onClick","newTaskButton","map","listItem","buttons","listButton","action","onChange","target","value","addButton","inProgress","done","App","createReducer","filter","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58f9e5d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DoneList_container__2SJQ5\",\"main\":\"DoneList_main__2uYdA\",\"listItem\":\"DoneList_listItem__25Nd_\",\"listButton\":\"DoneList_listButton__3IA2A\",\"buttons\":\"DoneList_buttons__29kpz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ToDoList_container__2JpEX\",\"main\":\"ToDoList_main__1j3TI\",\"listItem\":\"ToDoList_listItem__3dkOE\",\"listButton\":\"ToDoList_listButton__3n3OV\",\"buttons\":\"ToDoList_buttons__SBBWK\"};","import s from './Container.module.css'\n\nexport default function Container({children}) {\n    return (\n        <div className={s.container}>{children}</div>\n    )\n}","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nexport const addTodo = createAction('todos/add', text => ({\n    payload: {\n        id: shortid.generate(),\n        text,\n    }\n}));\n\n\nexport const deleteTodo = createAction('todos/delete');\nexport const moveInprogress = createAction('todos/moveInprogress');\nexport const moveDone = createAction('todos/moveDone')\nexport const filterTodo = createAction('todos/filter');\n\n","import s from './ToDoList.module.css';\nimport { connect } from 'react-redux';\nimport * as todosActions from '../../../redux/todos/todos-actions';\nimport { useState } from 'react';\n\nfunction ToDoList({ todo, addTodo, deleteTodo, moveInprogress }) {\n\n    const [text, setText] = useState('');\n    const [isVisibleInput, setIsVisibleInput] = useState(false);  \n\n\n    \n    const onSubmit = e => {\n        e.preventDefault();\n        if (text === '') {\n            return\n        }\n        addTodo(text);\n        setText('');\n\n    };\n\n    const onChange = e => {\n        setText(e.target.value);\n    };\n\n    const handleCancelInput = () => {\n        setText('');\n        setIsVisibleInput(!isVisibleInput);\n    }\n\n    return (\n        <div className={s.container}>\n            <div className={s.main}>\n                <h2>To Do</h2>\n                <button type=\"button\" onClick={() =>setIsVisibleInput(!isVisibleInput)} className={s.newTaskButton}>NEW TASK</button>\n            </div>\n           \n\n            <ul>\n                {todo && todo.map(todo => \n                    <li key={todo.id} className={s.listItem}>\n                        {todo.text}\n                        <div className={s.buttons}>\n                        <button type=\"button\" className={s.listButton} onClick={()=> moveInprogress(todo)}>Move InProgress</button>\n                        <button type=\"button\" className={s.listButton} onClick={()=> deleteTodo(todo.id)}>Delete</button>\n                        </div>\n                    </li>\n                )}\n            </ul>\n            \n\n            \n            {isVisibleInput &&\n                <form action=\"submit\" onSubmit={onSubmit}>\n                <label>\n                    <input type=\"text\" onChange={onChange} value={text} />\n                    <div className={s.buttons}>\n                      <button type=\"button\" onClick={onSubmit} className={s.addButton}>Add</button>\n                      <button type=\"button\" onClick={handleCancelInput}>Cancel</button>\n                    </div>\n                </label>\n                </form>\n            }            \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todo: state.todos.todo,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addTodo: text => dispatch(todosActions.addTodo(text)),\n    deleteTodo: id => dispatch(todosActions.deleteTodo(id)),\n    moveInprogress: todo => dispatch(todosActions.moveInprogress(todo))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList)","import s from './InProgressList.module.css';\nimport { connect } from 'react-redux';\nimport * as todosActions from '../../../redux/todos/todos-actions';\n\n\nfunction InProgressList({ inProgress, deleteTodo, moveDone }) {   \n\n    return (\n        <div className={s.container}>\n            <div className={s.main}>\n                <h2>In Progress</h2>\n                \n            </div>\n\n            <ul>\n                {inProgress && inProgress.map(todo => \n                    <li key={todo.id} className={s.listItem}>\n                        {todo.text}\n                        <div className={s.buttons}>\n                        <button type='button' className={s.listButton} onClick={() => moveDone(todo)}>Done</button>\n                        <button type=\"button\" className={s.listButton} onClick={() => deleteTodo(todo.id)}>Delete</button>\n                        </div>\n                    </li>\n                )}\n            </ul>           \n               \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    inProgress: state.todos.inProgress,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    deleteTodo: id => dispatch(todosActions.deleteTodo(id)),\n    moveDone: todo => dispatch(todosActions.moveDone(todo))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InProgressList)","import s from './DoneList.module.css';\nimport { connect } from 'react-redux';\nimport * as todosActions from '../../../redux/todos/todos-actions';\n\n\nfunction DoneList({ done }) {   \n\n    return (\n        <div className={s.container}>\n            <div className={s.main}>\n                <h2>Done</h2>                \n            </div>\n\n            <ul>\n                {done && done.map(todo => \n                    <li key={todo.id} className={s.listItem}>\n                        {todo.text}                        \n                    </li>\n                )}\n            </ul>           \n               \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    done: state.todos.done,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addTodo: text => dispatch(todosActions.addTodo(text))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneList)","import Container from \"./components/Container/Container\";\nimport ToDoList from \"./components/todos/ToDoList/ToDoList\";\nimport InProgressList from \"./components/todos/InProgressList/InProgressList\";\nimport DoneList from \"./components/todos/DoneList/DoneList\";\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <Container >\n      <h1>To Do List</h1>\n      <div className=\"container\">\n      <ToDoList />\n      <InProgressList />\n      <DoneList/>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { addTodo, deleteTodo, moveInprogress, moveDone, filterTodo } from './todos-actions';\nimport { combineReducers } from \"redux\";\n\nconst todo = createReducer([], {\n    [addTodo]: (state, { payload }) => [...state, payload],\n    [deleteTodo]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n    [moveInprogress]: (state, { payload }) => state.filter(({ id }) => id !== payload.id),\n});\n\nconst inProgress = createReducer([], {\n    [moveInprogress]: (state, { payload }) => [...state, payload],\n    [deleteTodo]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n    [moveDone]: (state, { payload }) => state.filter(({ id }) => id !== payload.id),\n});\n\nconst done = createReducer([], {\n    [moveDone]: (state, { payload }) => [...state, payload],\n    [deleteTodo]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n})\n\n\nexport default combineReducers({\n    todo,\n    inProgress,\n    done,\n\n});\n\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport todo from \"./todos/todos-reducer\";\n\n\nconst store = configureStore({\n    reducer: {\n        todos: todo,\n        \n        // inProgress: inProgressReducer,\n        // done: doneReducer,\n        // filter: filterReducer,\n    }\n\n\n\n});\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InProgressList_container__2suli\",\"main\":\"InProgressList_main__ii_qc\",\"listItem\":\"InProgressList_listItem__1Np7F\",\"listButton\":\"InProgressList_listButton__1LMjU\",\"buttons\":\"InProgressList_buttons__XhUbY\"};"],"sourceRoot":""}